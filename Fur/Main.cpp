#include "SFML/Graphics.hpp"
#include <iostream>
#include "Carro.h"
#include "Fabrica.h"
#include "Barreira.h"
#include "Caminhao.h"
#include <vector>


using namespace std;




int main() {

	sf::RenderWindow window(sf::VideoMode(1024, 768), "Projeto P1");
	int i = 0, j = 0, x = 1, y = 1;


	sf::View view = window.getDefaultView();
	view.setCenter(30, 15);
	view.zoom(0.07f);
	

		int mapa[30][60] = // Mapa:   0 = Vazio   1 = Barreira Horizontal   2 = Barreira Vertical    3 = Fábrica;

		{ { 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
		{ 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };


		vector<Carro> cx;
		vector<Caminhao> camx;
		


		for (i = 0; i < 1; i++) {

			cx.push_back(Carro(sf::Vector2f(5, 5), sf::Vector2f(1, 1), sf::Color::Red));
			
		}
		

		for (i = 0; i <1; i++) {

			camx.push_back(Caminhao(sf::Vector2f(15, 15), sf::Vector2f(1, 1), sf::Color::Cyan));

		}

	
	Fabrica f1(sf::Vector2f(7, 7), sf::Vector2f(2, 2), sf::Color::Yellow);
	Fabrica f2(sf::Vector2f(52, 7), sf::Vector2f(2, 2), sf::Color::Yellow);
	Fabrica f3(sf::Vector2f(29, 14), sf::Vector2f(2, 2), sf::Color::Yellow);
	Fabrica f4(sf::Vector2f(7, 22), sf::Vector2f(2, 2), sf::Color::Yellow);
	Fabrica f5(sf::Vector2f(52, 22), sf::Vector2f(2, 2), sf::Color::Yellow);
	


	Barreira b1(sf::Vector2f(0,0), sf::Vector2f(60, 1), sf::Color::White);
	Barreira b2(sf::Vector2f(0,30), sf::Vector2f(60, 1), sf::Color::White);
	Barreira b3(sf::Vector2f(0, 0), sf::Vector2f(1,30), sf::Color::White);
	Barreira b4(sf::Vector2f(59, 0), sf::Vector2f(1, 30), sf::Color::White);


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{
			// Close window: exit
			if (event.type == sf::Event::Closed)
				window.close();

		}

		window.setView(view);


		for (int i = 0; i < cx.size() ; i++) {

			
			cx[i].Movimento();
			cx[i].Update();
		}

		for (int i = 0; i < camx.size(); i++) {
			camx[i].Movimento();
			camx[i].Update();
		}

		f1.Update();
		f2.Update();
		f3.Update();
		f4.Update();
		f5.Update();

		b1.Update();
		b2.Update();
		b3.Update();
		b4.Update();


		for (i = 0; i < cx.size(); i++) {



			if (cx[i].Colisor(f1) || cx[i].Colisor(f2) || cx[i].Colisor(f3) || cx[i].Colisor(f4) || cx[i].Colisor(f5)) {

				cx.push_back(Carro(sf::Vector2f(15, 15), sf::Vector2f(1, 1), sf::Color::Red));
				//system("Pause");
			}

			if (cx[i].Colisor(b1) || cx[i].Colisor(b2) || cx[i].Colisor(b3) || cx[i].Colisor(b4)) {
				//system("Pause");
			}
			for (int j = 0; j < camx.size(); j++) {
				if (cx[i].Colisor(camx[j])) {
					cx.erase(cx.begin() + i);
					break;
					//system("Pause");
				}
			}
		}
		
		
			for (int i = 0; i < camx.size(); i++) {

				

			if (camx[i].Colisor(f1) || camx[i].Colisor(f2) || camx[i].Colisor(f3) || camx[i].Colisor(f4) || camx[i].Colisor(f5)) {

				camx.push_back(Caminhao(sf::Vector2f(25, 5), sf::Vector2f(1, 1), sf::Color::Cyan));
			//	system("Pause");
			}


			if (camx[i].Colisor(b1) || camx[i].Colisor(b2) || camx[i].Colisor(b3) || camx[i].Colisor(b4)) {
			//	system("Pause");
			}

		}

		window.clear(sf::Color::Black);

		
		for (int i = 0; i < cx.size(); i++) {
			
			window.draw(cx[i].Car);
		}

		for (int i = 0; i < camx.size(); i++) {
			window.draw(camx[i].Cam);
		}

		window.draw(f1.fab);
		window.draw(f2.fab);
		window.draw(f3.fab);
		window.draw(f4.fab);
		window.draw(f5.fab);

		window.draw(b1.bar);
		window.draw(b2.bar);
		window.draw(b3.bar);
		window.draw(b4.bar);
		window.display();

	}




	system("Pause");




} 


